#####################################################################
#   GCODE overrides
#####################################################################

[gcode_macro G28]
# Only home if needed
rename_existing: G28.1
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
        G28.1
    {% endif %}

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28

    {% if printer.quad_gantry_level.applied|lower == 'false' %}
        QUAD_GANTRY_LEVEL
    {% endif %}
    G28
    
    G0 X150 Y150 Z30 F3600
    RESTORE_GCODE_STATE NAME=STATE_G32

#####################################################################
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
#####################################################################

[gcode_macro PRINT_START]
gcode:
    # Parameters
    {% set bedTemp = params.BED|int %}
    {% set extruderTemp = params.EXTRUDER|int %}
    {% set chamberTemp = params.CHAMBER|default(0)|int %}
    
    G32                            ; home all axes
    G90                            ; absolute positioning
    G1 Z20 F3000                   ; move nozzle away from bed

    # settings from gcode
    M190 S{bedTemp}                ; wait for the bed to get to temp
    M109 S{extruderTemp}           ; set the nozzle to the correct temp


#####################################################################
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
#####################################################################

[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

#####################################################################
# resonance testing with adxl
#####################################################################

#[mcu rpi]
#serial: /tmp/klipper_host_mcu

#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    150, 150, 20

#####################################################################
# filament management
#####################################################################

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  50
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  50
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state